@using Microsoft.AspNetCore.Components
@using MudBlazor
@using RestoUnikom.Data.Models
@inject RestoUnikom.Data.RepositoriResto Repo
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">Detail Pesanan</MudText>
        @if (isLoading)
        {
            <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" />
        }
        else if (pesanan == null)
        {
            <MudText>Pesanan tidak ditemukan.</MudText>
        }
        else
        {
            <MudText>Meja: <b>@pesanan.Meja?.NomorMeja</b></MudText>
            <MudText>Tanggal: @pesanan.TanggalPesanan</MudText>
            <MudText>Status: @pesanan.StatusPesanan</MudText>
            <MudList T="DetailPesanan" Dense="true">
                @if (detailPesananList != null)
                {
                    @foreach (var d in detailPesananList)
                    {
                        <MudListItem T="DetailPesanan">
                            @if (!string.IsNullOrEmpty(d.Catatan))
                            {
                                <MudText>@d.Menu?.NamaMenu x @d.Jumlah (@d.Catatan)</MudText>
                            }
                            else
                            {
                                <MudText>@d.Menu?.NamaMenu x @d.Jumlah</MudText>
                            }

                        </MudListItem>
                    }
                }
            </MudList>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@CloseDialog">Tutup</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public int PesananId { get; set; }
    private Pesanan? pesanan;
    private List<DetailPesanan>? detailPesananList;
    private bool isLoading = true;

    private void CloseDialog() => MudDialog.Close();

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        pesanan = await Repo.GetPesananByIdAsync(PesananId);
        detailPesananList = await Repo.GetDetailPesanansByPesananIdAsync(PesananId);
        isLoading = false;
    }
}
