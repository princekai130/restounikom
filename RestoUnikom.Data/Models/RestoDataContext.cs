// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RestoUnikom.Data.Models;

public partial class RestoDataContext : DbContext
{
    public RestoDataContext(DbContextOptions<RestoDataContext> options)
        : base(options)
    {
    }

    public virtual DbSet<DetailPesanan> DetailPesanans { get; set; }

    public virtual DbSet<LogAktivita> LogAktivitas { get; set; }

    public virtual DbSet<Meja> Mejas { get; set; }

    public virtual DbSet<Menu> Menus { get; set; }

    public virtual DbSet<MenuBahan> MenuBahans { get; set; }

    public virtual DbSet<Pegawai> Pegawais { get; set; }

    public virtual DbSet<Pembayaran> Pembayarans { get; set; }

    public virtual DbSet<Pesanan> Pesanans { get; set; }

    public virtual DbSet<Reservasi> Reservasis { get; set; }

    public virtual DbSet<StokBahan> StokBahans { get; set; }

    public virtual DbSet<Ulasan> Ulasans { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DetailPesanan>(entity =>
        {
            entity.ToTable("DetailPesanan");

            entity.Property(e => e.DetailPesananId).HasColumnName("DetailPesananID");
            entity.Property(e => e.MenuId).HasColumnName("MenuID");
            entity.Property(e => e.PesananId).HasColumnName("PesananID");

            entity.HasOne(d => d.Menu).WithMany(p => p.DetailPesanans)
                .HasForeignKey(d => d.MenuId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.Pesanan).WithMany(p => p.DetailPesanans)
                .HasForeignKey(d => d.PesananId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<LogAktivita>(entity =>
        {
            entity.HasKey(e => e.LogId);

            entity.Property(e => e.LogId).HasColumnName("LogID");
            entity.Property(e => e.BerhasilKah).HasDefaultValue(0);
            entity.Property(e => e.PegawaiId).HasColumnName("PegawaiID");
            entity.Property(e => e.TanggalAktivitas).HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.HasOne(d => d.Pegawai).WithMany(p => p.LogAktivita)
                .HasForeignKey(d => d.PegawaiId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<Meja>(entity =>
        {
            entity.ToTable("Meja");

            entity.HasIndex(e => e.NomorMeja, "IX_Meja_NomorMeja").IsUnique();

            entity.Property(e => e.MejaId).HasColumnName("MejaID");
            entity.Property(e => e.AktifKah).HasDefaultValue(1);
            entity.Property(e => e.NomorMeja).IsRequired();
            entity.Property(e => e.StatusMeja).IsRequired();
        });

        modelBuilder.Entity<Menu>(entity =>
        {
            entity.ToTable("Menu");

            entity.HasIndex(e => e.NamaMenu, "IX_Menu_NamaMenu").IsUnique();

            entity.Property(e => e.MenuId).HasColumnName("MenuID");
            entity.Property(e => e.Kategori).IsRequired();
            entity.Property(e => e.NamaMenu).IsRequired();
            entity.Property(e => e.StokTersedia).HasDefaultValue(100);
            entity.Property(e => e.TanggalDitambahkan).HasDefaultValueSql("CURRENT_DATE");
            entity.Property(e => e.TersediaKah).HasDefaultValue(1);
        });

        modelBuilder.Entity<MenuBahan>(entity =>
        {
            entity.ToTable("MenuBahan");

            entity.Property(e => e.MenuBahanId).HasColumnName("MenuBahanID");
            entity.Property(e => e.BahanId).HasColumnName("BahanID");
            entity.Property(e => e.MenuId).HasColumnName("MenuID");

            entity.HasOne(d => d.Bahan).WithMany(p => p.MenuBahans)
                .HasForeignKey(d => d.BahanId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.Menu).WithMany(p => p.MenuBahans)
                .HasForeignKey(d => d.MenuId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<Pegawai>(entity =>
        {
            entity.ToTable("Pegawai");

            entity.HasIndex(e => e.NamaPengguna, "IX_Pegawai_NamaPengguna").IsUnique();

            entity.Property(e => e.PegawaiId).HasColumnName("PegawaiID");
            entity.Property(e => e.AktifKah).HasDefaultValue(1);
            entity.Property(e => e.KataSandi).IsRequired();
            entity.Property(e => e.NamaPegawai).IsRequired();
            entity.Property(e => e.NamaPengguna).IsRequired();
            entity.Property(e => e.PeranPegawai).IsRequired();
            entity.Property(e => e.TanggalMulai).HasDefaultValueSql("CURRENT_DATE");
        });

        modelBuilder.Entity<Pembayaran>(entity =>
        {
            entity.ToTable("Pembayaran");

            entity.HasIndex(e => e.NotaNomor, "IX_Pembayaran_NotaNomor").IsUnique();

            entity.HasIndex(e => e.PesananId, "idx_pembayaran_pesanan");

            entity.Property(e => e.PembayaranId).HasColumnName("PembayaranID");
            entity.Property(e => e.BerhasilKah).HasDefaultValue(1);
            entity.Property(e => e.MetodeBayar).IsRequired();
            entity.Property(e => e.NotaNomor).IsRequired();
            entity.Property(e => e.PegawaiId).HasColumnName("PegawaiID");
            entity.Property(e => e.PesananId).HasColumnName("PesananID");
            entity.Property(e => e.TanggalBayar)
                .IsRequired()
                .HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.HasOne(d => d.Pegawai).WithMany(p => p.Pembayarans)
                .HasForeignKey(d => d.PegawaiId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.Pesanan).WithMany(p => p.Pembayarans)
                .HasForeignKey(d => d.PesananId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<Pesanan>(entity =>
        {
            entity.ToTable("Pesanan");

            entity.Property(e => e.PesananId).HasColumnName("PesananID");
            entity.Property(e => e.MejaId).HasColumnName("MejaID");
            entity.Property(e => e.PegawaiId).HasColumnName("PegawaiID");
            entity.Property(e => e.StatusPesanan).IsRequired();
            entity.Property(e => e.TanggalPesanan)
                .IsRequired()
                .HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.HasOne(d => d.Meja).WithMany(p => p.Pesanans)
                .HasForeignKey(d => d.MejaId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.Pegawai).WithMany(p => p.Pesanans)
                .HasForeignKey(d => d.PegawaiId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<Reservasi>(entity =>
        {
            entity.ToTable("Reservasi");

            entity.HasIndex(e => e.TanggalReservasi, "idx_tanggal_reservasi");

            entity.Property(e => e.ReservasiId).HasColumnName("ReservasiID");
            entity.Property(e => e.AktifKah).HasDefaultValue(1);
            entity.Property(e => e.MejaId).HasColumnName("MejaID");
            entity.Property(e => e.NamaPelanggan).IsRequired();
            entity.Property(e => e.PegawaiId).HasColumnName("PegawaiID");
            entity.Property(e => e.StatusReservasi).IsRequired();

            entity.HasOne(d => d.Meja).WithMany(p => p.Reservasis)
                .HasForeignKey(d => d.MejaId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.Pegawai).WithMany(p => p.Reservasis)
                .HasForeignKey(d => d.PegawaiId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<StokBahan>(entity =>
        {
            entity.HasKey(e => e.BahanId);

            entity.ToTable("StokBahan");

            entity.HasIndex(e => e.NamaBahan, "IX_StokBahan_NamaBahan").IsUnique();

            entity.HasIndex(e => e.TersediaKah, "idx_stok_bahan");

            entity.Property(e => e.BahanId).HasColumnName("BahanID");
            entity.Property(e => e.NamaBahan).IsRequired();
            entity.Property(e => e.Satuan).IsRequired();
            entity.Property(e => e.TanggalDiperbarui).HasDefaultValueSql("CURRENT_TIMESTAMP");
            entity.Property(e => e.TersediaKah).HasDefaultValue(1);
        });

        modelBuilder.Entity<Ulasan>(entity =>
        {
            entity.ToTable("Ulasan");

            entity.Property(e => e.UlasanId).HasColumnName("UlasanID");
            entity.Property(e => e.AktifKah).HasDefaultValue(1);
            entity.Property(e => e.PesananId).HasColumnName("PesananID");
            entity.Property(e => e.TanggalUlasan)
                .IsRequired()
                .HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.HasOne(d => d.Pesanan).WithMany(p => p.Ulasans)
                .HasForeignKey(d => d.PesananId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}